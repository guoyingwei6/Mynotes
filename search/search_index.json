{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"01.Programing/01.Linux/Mac%E7%BB%88%E7%AB%AF%E9%85%8D%E7%BD%AE/","title":"Mac\u7ec8\u7aef\u914d\u7f6e","text":"<pre><code># \u5b89\u88c5\u63d2\u4ef6\ngit clone https://github.com/robbyrussell/oh-my-zsh.git ~/.zsh/plugins\ngit clone https://github.com/zsh-users/zsh-autosuggestions ~/.zsh/plugins\n# \u542f\u7528\u63d2\u4ef6\nsource ~/.zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh\nsource ~/.zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\n\n# \u542f\u7528\u5f69\u8272\u63d0\u793a\u7b26\nautoload -U colors &amp;&amp; colors\n\n# \u6bcf\u6b21\u5237\u65b0\u63d0\u793a\u7b26\nsetopt prompt_subst\n\n# \u5f69\u8272\nexport CLICOLOR=1\n\n# \u8bbe\u7f6e\u63d0\u793a\u7b26\nPROMPT=$'%{$fg_bold[red]%}\uf8ff%{$reset_color%} %{$fg_bold[magenta]%}%M%{$reset_color%} %{$fg_bold[blue]%}%n%{$reset_color%} %{$fg_bold[cyan]%}%D %*%{$reset_color%} %{$fg_bold[green]%}%d%{$reset_color%} %{$fg_bold[blue]%}$(git branch --show-current 2&amp;&gt; /dev/null | xargs -I branch echo \"(branch)\")%{$reset_color%}\\n%{$fg_bold[yellow]%}%#%{$reset_color%} '\n\n# proxy\nalias proxy='export all_proxy=socks5://127.0.0.1:7890'\nalias unproxy='unset all_proxy'\n</code></pre>"},{"location":"01.Programing/01.Linux/linux/","title":"linux","text":""},{"location":"01.Programing/01.Linux/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%96%B0%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE/","title":"\u670d\u52a1\u5668\u65b0\u7528\u6237\u914d\u7f6e","text":""},{"location":"01.Programing/01.Linux/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%96%B0%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE/#-","title":"- \u670d\u52a1\u5668","text":""},{"location":"01.Programing/01.Linux/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%96%B0%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE/#_1","title":"\u8d26\u6237\u914d\u7f6e\u6587\u4ef6","text":""},{"location":"01.Programing/01.Linux/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%96%B0%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE/#bashrc","title":"\u914d\u7f6e\uff5e/.bashrc","text":"<pre><code>#edit by gyw\n\n# .bashrc\n\n# Source global definitions\nif [ -f /etc/bashrc ]; then\n. /etc/bashrc\nfi\n\n# User specific aliases and functions\nexport PS1=\"\\[\\e[31;1m\\]Aliyun \\[\\e[35;1m\\]\\h \\[\\e[34;1m\\]\\u \\[\\e[36;1m\\]\\d \\t \\[\\e[32;1m\\]\\$PWD/ (\\$(ls -A|wc -l))\\[\\e[0m\\] \\n\\[\\e[0m\\]\\[\\e[33;1m\\]\\$\\[\\e[0m\\]\"\nexport LANG=en_US.UTF-8\nexport LC_ALL=en_US.UTF-8\n\n# alias set by gyw\nalias ch=\"chmod +x\"\nalias les=\"less -S\"             # \u4e0d\u6362\u884c\u663e\u793a\nalias kes=\"less -S\"\nalias la='ls -Al'               # \u663e\u793a\u9690\u85cf\u6587\u4ef6\nalias ls='ls -hF --color'   # \u4e3a\u8bc6\u522b\u7684\u6587\u4ef6\u7c7b\u578b\u6dfb\u52a0\u989c\u8272\nalias lk='ls -lSr'              # \u6309\u5c3a\u5bf8\u6392\u5e8f\nalias lr='ls -lR'               # \u9012\u5f52ls\nalias lt='ls -ltr'              # \u6309\u65e5\u671f\u6392\u5e8f\nalias du='du -kh'    # Makes a more readable output.\nalias df='df -kTh'\nalias h=\"history | less\"\nalias wl=\"wc -l\"\nalias vb=\"vi ~/.bashrc\"\nalias sb=\"source ~/.bashrc\"\nalias vv=\"vi ~/.vimrc\"\nalias untar=\"tar -zxf\"\nalias l='ls -lthr --color=auto'\nalias lll='ls -althr'\nalias lss='ls -s --color'\nalias ..=\"cd ..\"\nalias ...=\"cd ../..\"\nalias ~=\"cd ~\"\nalias rm=\"rm -I\"\nalias ct=\"cleartrash\"\nalias CAT=\"cat -A\"\nalias mv=\"mv -i\"\nalias cp=\"cp -i\"\nalias cdl='function __cdl(){ if [ $# == 1 ]; then cd $1; ls -al; unset -f __cdl; fi }; __cdl'\nalias cdls='function __cdls(){ if [ $# == 1 ]; then cd $1; ls; unset -f __cdls; fi }; __cdls'\nalias cdlss='function __cdlss(){ if [ $# == 1 ]; then cd $1; ls -s; unset -f __cdlss; fi }; __cdlss'\nalias mkcd='function __mkcd(){ if [ $# == 1 ]; then mkdir $1; cd $1; unset -f __mkcd; elif [ $# == 2 ]; then mkdir $1 $2; cd $2; unset -f __mkcd; fi }; __mkcd'\nalias sc=\"screen\"\n\n\n# &gt;&gt;&gt; conda initialize &gt;&gt;&gt;\n# !! Contents within this block are managed by 'conda init' !!\n__conda_setup=\"$('/home/guoyingwei/software/miniconda3/bin/conda' 'shell.bash' 'hook' 2&gt; /dev/null)\"\nif [ $? -eq 0 ]; then\neval \"$__conda_setup\"\nelse\nif [ -f \"/home/guoyingwei/software/miniconda3/etc/profile.d/conda.sh\" ]; then\n. \"/home/guoyingwei/software/miniconda3/etc/profile.d/conda.sh\"\nelse\nexport PATH=\"/home/guoyingwei/software/miniconda3/bin:$PATH\"\nfi\nfi\nunset __conda_setup\n# &lt;&lt;&lt; conda initialize &lt;&lt;&lt;\n</code></pre>"},{"location":"01.Programing/01.Linux/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%96%B0%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE/#vimrc","title":"\u914d\u7f6e~/.vimrc","text":"<pre><code>set encoding=utf8\nset hlsearch    \"\u9ad8\u4eae\u5ea6\u53cd\u767d\nset nu          \"\u663e\u793a\u884c\u53f7\nset bg=dark     \"\u4e0d\u540c\u5e95\u8272\u8272\u8c03\nsyntax on       \"\u8bed\u6cd5\u68c0\u9a8c\n\n\ninoremap ( ()&lt;LEFT&gt;\ninoremap { {}&lt;LEFT&gt;\ninoremap [ []&lt;LEFT&gt;\nset showmatch     \"\u663e\u793a\u5339\u914d\u7684\u62ec\u53f7\nset smartindent\nset autoindent\n\"\"set mouse=a       \"\u5141\u8bb8\u5149\u6807\u70b9\u51fb\nset tabstop=4      \"(\u6ce8\uff1ats\u662ftabstop\u7684\u7f29\u5199\uff0c\u8bbeTAB\u5bbd4\u4e2a\u7a7a\u683c)\nset expandtab      \"\u8bbe\u7f6etab\u7528\u7a7a\u683c\u8868\u793a\nset shiftwidth=4   \"\u7f29\u8fdb\u957f\u5ea6\nset noswapfile     \"\u4e0d\u5907\u4efd\u6587\u4ef6\nset softtabstop=4  \"\u9000\u683c\u952e\u957f\u5ea6\nset pastetoggle=&lt;F9&gt; \"\u5207\u6362\u81ea\u52a8\u7f29\u8fdb\nmap &lt;F10&gt; :set paste&lt;CR&gt;\nmap &lt;F11&gt; :set nopaste&lt;CR&gt;\n</code></pre>"},{"location":"01.Programing/01.Linux/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%96%B0%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE/#miniconda","title":"\u5b89\u88c5miniconda","text":""},{"location":"01.Programing/01.Linux/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%96%B0%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE/#_2","title":"\u5b89\u88c5","text":"<pre><code>mkdir -p ~/miniconda3\nwget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh\nbash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3\nrm -rf ~/miniconda3/miniconda.sh\n</code></pre>"},{"location":"01.Programing/01.Linux/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%96%B0%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE/#_3","title":"\u521d\u59cb\u5316","text":"<pre><code>~/miniconda3/bin/conda init bash\n</code></pre>"},{"location":"01.Programing/01.Linux/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%96%B0%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE/#_4","title":"\u914d\u7f6e\u6e05\u534e\u6e90","text":"<pre><code>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\nconda config --set show_channel_urls yes\n</code></pre>"},{"location":"01.Programing/01.Linux/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%96%B0%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE/#github","title":"GitHub\u540c\u6b65\u914d\u7f6e\u6587\u4ef6","text":""},{"location":"01.Programing/01.Linux/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%96%B0%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE/#github_1","title":"\u914d\u7f6eGitHub\u8d26\u53f7","text":"<pre><code>git config --global user.name \"guoyingwei_aliyun\"\ngit config --global user.email \"guoyingwei6@outlook.com\"\nssh-keygen -t ed25519 -C \"guoyingwei6@outlook.com\"\n\n\n\n# \u590d\u5236\u663e\u793a\u7684\u5185\u5bb9\ncat ~/.ssh/id_ed25519.pub\n# \u628a\u516c\u94a5\u6dfb\u52a0\u5230GitHub &gt; Setting &gt; SSH and GPG keys\n</code></pre>"},{"location":"01.Programing/01.Linux/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%96%B0%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE/#_5","title":"\u8fdc\u7a0b\u548c\u672c\u5730\u914d\u7f6e\u6587\u4ef6\u540c\u6b65","text":"<pre><code>git clone git@github.com:guoyingwei6/dotfiles.git\ncd dotfiles\n/usr/bin/cp -f ~/.bashrc .bashrc\n/usr/bin/cp -f ~/.vimrc .vimrc\ngit add ./\ngit commit -m \"syn dotfiles\"\ngit push\n</code></pre>"},{"location":"01.Programing/01.Linux/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%96%B0%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE/#cron","title":"\u5229\u7528cron\u6bcf\u5929\u81ea\u52a8\u5907\u4efd\u914d\u7f6e\u6587\u4ef6","text":"<pre><code>vi syn.sh\n# syn.sh\u5199\u5165\u4e0b\u5217\u547d\u4ee4:\n/usr/bin/cp -f ~/.bashrc /home/guoyingwei/dotfiles/.bashrc\n/usr/bin/cp -f ~/.vimrc /home/guoyingwei/dotfiles/.vimrc\ngit -C /home/guoyingwei/dotfiles/ add /home/guoyingwei/dotfiles/\ngit -C /home/guoyingwei/dotfiles/ commit -m \"syn dotfiles\"\ngit -C /home/guoyingwei/dotfiles/ push # \u975egit\u76ee\u5f55\u4e0b\u4f7f\u7528git\u9700\u8981-C\u53c2\u6570\n\nvi .gitignore\n# \u5728dotfiles\u4ed3\u5e93\u76ee\u5f55\u4e0b\u521b\u5efa.gitignore\u6587\u4ef6\nsyn.sh    # \u5ffd\u7565syn.sh\n\n# \u8c03\u7528crontab\ncrontab -e\n* 1 * * * bash /home/guoyingwei/dotfiles/syn.sh  # \u6bcf\u5929\u51cc\u66681\u70b9\u81ea\u52a8\u540c\u6b65\u4e00\u6b21\n</code></pre> <p>\u53ea\u80fd\u5f80GitHub\u5907\u4efd\uff0c\u4e0d\u80fd\u540c\u6b65\u3002\u5982\u679c\u5176\u5b83\u670d\u52a1\u5668\u4e0a\u7684\u914d\u7f6e\u6587\u4ef6\u53d1\u751f\u6539\u52a8\u5e76\u4e0a\u4f20\uff0c\u5219\u672c\u5730\u5fc5\u9700\u624b\u52a8pull\u4e00\u6b21\u3002</p>"},{"location":"01.Programing/02.Python/2019-02-11-Morse-code/","title":"2019 02 11 Morse code","text":""},{"location":"01.Programing/02.Python/2019-02-11-Morse-code/#_1","title":"\u4ecb\u7ecd","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7528python\u5199\u7684\u8fdb\u884c\u82f1\u8bed\u548c\u6469\u5c14\u65af\u7535\u7801\u8f6c\u6362\u7684\u7a0b\u5e8f\uff0c\u7eaf\u5c5e\u7ec3\u4e60\u548c\u5a31\u4e50\uff0c\u5982\u6709\u9519\u8bef\u6b22\u8fce\u6307\u6b63\u3002  </p>"},{"location":"01.Programing/02.Python/2019-02-11-Morse-code/#_2","title":"\u8bf4\u660e","text":"<ul> <li>\u8f93\u5165\u7684\u82f1\u8bed\u53ea\u80fd\u662f\u5355\u8bcd\uff0c\u6807\u70b9\u7b26\u53f7\u65e0\u6cd5\u8bc6\u522b\uff01</li> <li>\u8f6c\u6362\u51fa\u7684\u6469\u5c14\u65af\u7535\u7801\u5b57\u6bcd\u4e4b\u95f4\u7528\u7a7a\u683c\u533a\u5206\uff0c\u5355\u8bcd\u4e4b\u95f4\u7528/\u533a\u5206\u3002</li> </ul>"},{"location":"01.Programing/02.Python/2019-02-11-Morse-code/#_3","title":"\u811a\u672c\u5982\u4e0b","text":"<pre><code># program for convertion between words and Morse code\n'''\nAuthor:will\nDate  :2019/2/11\nE-mail:willgyw@126.com\n'''\n\n# dict of words2morse\ndict1 = {'a':'.-'  , 'b':'-...', 'c':'-.-.', 'd':'-.'  , 'e':'.'   ,\n         'f':'..-.', 'g':'--.' , 'h':'....', 'i':'..'  , 'j':'.---',\n         'k':'-.-' , 'l':'.-..', 'm':'--'  , 'n':'-.'  , 'o':'---' ,\n         'p':'.--.', 'q':'--.-', 'r':'.-.' , 's':'...' , 't':'-'   ,\n         'u':'..-' , 'v':'...-', 'w':'.--' , 'x':'-..-', 'y':'-.--', 'z':'--..',\n         '0':'-----' , '1':'.----' , '2':'..---' , '3': '...--', '4': '....-' ,\n         '5': '.....', '6': '-....', '7': '--...', '8': '---..', '9': '----.' }\n\n# dict of morse2words\ndict2 = dict(zip(dict1.values(), dict1.keys()))\n\ndef encode():\n    words = input(\"Input a sentence you want to endoce, NO PUNCTUATION:\").strip().lower()\n    for letter in words:\n        if letter == ' ':\n            print('/', end=' ')\n        else:\n            print(dict1[letter], end=' ')\n    print()\n\ndef decode():\n    codes = input(\"Input Morse code you want to decode, ONLY MORSE CODE:\").strip().split(\" \")\n    for sign in codes:\n        if sign == '/':\n            print(' ', end='')\n        else:\n            print(dict2[sign], end='')\n    print()\n\ndef main():    \n    while 1 == 1:\n        choice = input(\"Encode(Words to Morse codes) or Decode(Morse codes to Words).Plase input [0/1]\")\n\n        if   choice == '0':\n            encode()\n        elif choice == '1':\n            decode()\n        else:\n            break\n\nif __name__==\"__main__\":\n    main()\n</code></pre>"},{"location":"01.Programing/02.Python/2019-02-27-Id-from-fasta/","title":"\u6839\u636eID\u4eceFASTA\u6587\u4ef6\u4e2d\u63d0\u53d6\u5e8f\u5217","text":"<p>\u535a\u4e3b\u662f\u4e00\u4e2a\u521a\u521a\u63a5\u89e6\u751f\u4fe1\u7684\u65b0\u624b\uff0c\u6b63\u5728\u5b66\u4e60Linux\u548cPython\uff0c\u5076\u5c14\u4f1a\u5728\u8be5\u535a\u5ba2\u4e0a\u9762\u53d1\u5e03\u81ea\u5df1\u7ec3\u4e60\u7f16\u7a0b\u5199\u7684\u811a\u672c\uff0c\u7528\u6765\u8bb0\u5f55\u81ea\u5df1\u7684\u5b66\u4e60\u4e4b\u8def\u3002</p>","tags":["documentation","sample"]},{"location":"01.Programing/02.Python/2019-02-27-Id-from-fasta/#_1","title":"\u4ecb\u7ecd","text":"<p>\u6839\u636e\u5e8f\u5217\u7684ID\u53f7\u4eceFASTA\u6587\u4ef6\u4e2d\u6279\u91cf\u63d0\u53d6\u5e8f\u5217\u662f\u5728\u5e73\u65f6\u5e38\u5e38\u8981\u505a\u7684\u5de5\u4f5c\uff0cLinux\u5f53\u4e2dgrep\u548cawk\u5de5\u5177\u3001Perl\u8bed\u8a00\u548cPython\u8bed\u8a00\uff0c\u4ee5\u53casamtools\u7b49\u90fd\u53ef\u4ee5\u5b9e\u73b0\uff0c\u4ee5\u4e0b\u662f\u535a\u4e3b\u7528Python\u5b9e\u73b0\u7684\u4eceFASTA\u6587\u4ef6\u4e2d\u6279\u91cf\u63d0\u53d6\u5e8f\u5217\u7684\u811a\u672c\u3002</p>","tags":["documentation","sample"]},{"location":"01.Programing/02.Python/2019-02-27-Id-from-fasta/#_2","title":"\u8bf4\u660e","text":"<ul> <li>\u9700\u8981\u7528\u5230fasta\u6587\u4ef6\u548cID\u7684list\u6587\u4ef6\u3002</li> <li>\u6240\u8981\u63d0\u53d6\u7684\u5e8f\u5217\u7684ID\u9700\u8981\u63d0\u524d\u5199\u8fdb\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u6bcf\u884c\u4e00\u4e2a\u3002</li> </ul>","tags":["documentation","sample"]},{"location":"01.Programing/02.Python/2019-02-27-Id-from-fasta/#_3","title":"\u811a\u672c\u5982\u4e0b","text":"<p>1. \u91c7\u7528*click*\u6a21\u5757\u6dfb\u52a0\u547d\u4ee4\u884c\u53c2\u6570\u3002</p> <p><pre><code># -*- coding: utf-8 -*-\n\"\"\"\n@author: gyw\n@Date:  Wed Feb 27 09:19:54 2019\n@E-mail: willgyw@126.com\n@Description: This program can extract sequences \n              from a fasta file, according to a \n              given id list.\n\"\"\"\n\nimport click\n\n@click.command()\n@click.option('-f', '--fastafile', help='Input a fasta file', required=True)\n@click.option('-i', '--idfile', help='Input an idlist', required=True)\n@click.option('-o', '--outfile', help='Input the name of result file', default='result.fa')\n\n\ndef main(fastafile, idfile, outfile):\n\"\"\" \n    Extract seqences from a fasta file \n    according to a id list.\n    \"\"\"\n    idfile = open(idfile, 'r')\n    resultfile = open(outfile, 'w')\n    for id in idfile:\n        qid = id.strip()\n        flag = 0 \n        with open(fastafile,'r') as ffile:\n            for line in ffile:\n                line = line.strip()\n                if line.startswith('&gt;'):\n                    name = line.replace('&gt;','').split()[0]\n                    if name == qid:\n                        flag = 1\n                        resultfile.write(line + '\\n')\n                    else:\n                        flag = 0\n                else:\n                    if flag == 0:\n                        pass\n                    else:\n                        resultfile.write(line + '\\n')\n    resultfile.close()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre> 2. \u53e6\u4e00\u79cd\u65b9\u6cd5\uff0c\u5c06FASTA\u6587\u4ef6\u4e2d\u7684\u5e8f\u5217\u5bfc\u5165*\u5b57\u5178*\u4e2d\u8fdb\u884c\u67e5\u627e\uff0c\u901f\u5ea6\u8fdc\u5feb\u4e8e\u4e0a\u4e00\u79cd\u3002 <pre><code># -*- coding: utf-8 -*-\n\"\"\"\n@author: gyw\n@Date:  Wed Feb 28 2019\n@E-mail: willgyw@126.com\n@Description: A script to extract sequences from fasta file.\n\"\"\"\nimport sys \n\ndef usage():\n    print('Usage: python3 script.py [fasta_file] [idlist_file] [outfile_name]')\n\n\ndef main():\n    outf = open(sys.argv[3],'w')\n    dict = {}\n    with open(sys.argv[1], 'r') as fastaf:\n        for line in fastaf:\n            if line.startswith('&gt;'):\n                name = line.strip().split()[0][1:]\n                dict[name] = ''\n            else:\n                dict[name] += line.replace('\\n','')\n\n    with open(sys.argv[2],'r') as listf:\n        for row in listf:\n            row = row.strip()\n            for key in dict.keys():\n                if key == row:\n                    outf.write('&gt;' + key+ '\\n')\n                    outf.write(dict[key] + '\\n')\n    outf.close()\n\n\ntry:\n    main()\nexcept IndexError:\n    usage()\n</code></pre> 3. \u7b2c\u4e09\u79cd\u65b9\u6cd5\uff0c\u4e0e\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u5b9e\u73b0\u529f\u80fd\u7684\u6838\u5fc3\u7b97\u6cd5\u4e00\u6837\uff0c\u52a0\u5165\u4e86*getopt*\u6a21\u5757\uff0c\u53ef\u6dfb\u52a0\u547d\u4ee4\u884c\u53c2\u6570\u3002</p> <p><pre><code>import sys\nimport getopt\n\n\ndef usage():\n    print('''\n          Usage: python3 script.py [option] [patameter]\n          -f/--fasta          input a fasta file\n          -i/--idlist         input id list\n          -o/--outfile        input outfile name\n          -h/--help           show possible options\n          ''')\n\nopts,args = getopt.getopt(sys.argv[1:], 'hf:i:o:', ['help', 'fasta=', 'idlist=', 'outfile='])\nfor opt,val in opts:\n    if opt == '-f' or opt == '--fasta':\n        fasta = val \n    elif opt == '-i' or opt == '--idlist':\n        idlist = val \n    elif opt == '-o' or opt == '--outfile':\n        outfile = val \n    elif opt == '-h' or opt == '--help':\n        usage()\n        sys.exit(1)\n\noutf = open(outfile, 'w')\n\ndict = {}\nwith open(fasta, 'r') as fastaf:\n    for line in fastaf:\n        if line.startswith('&gt;'):\n            name = line.strip().split()[0][1:]\n            dict[name] = ''\n        else:\n            dict[name] += line.replace('\\n','')\n\nwith open(idlist, 'r') as listf:\n    for row in listf:\n        row = row.strip()\n        for key in dict.keys():\n            if key == row:\n                outf.write('&gt;' + key + '\\n')\n                outf.write(dict[key] + '\\n')\n\noutf.close()\n</code></pre> 4. \u5b9e\u73b0\u529f\u80fd\u7684\u7b97\u6cd5\u4e0e\u65b9\u6cd5\u4e00\u76f8\u540c\uff0c\u901a\u8fc7*fire*\u6a21\u5757\u89e3\u6790\u547d\u4ee4\u884c\u53c2\u6570\u3002</p> <pre><code>import fire\n\n\ndef main(fastafile, idfile, outfile):\n\"\"\"\n    Extract seqences from a fasta file \n    according to a id list.\n    \"\"\"\n    idfile = open(idfile, 'r')\n    resultfile = open(outfile, 'w')\n    for id in idfile:\n        qid = id.strip()\n        flag = 0\n        with open(fastafile, 'r') as ffile:\n            for line in ffile:\n                line = line.strip()\n                if line.startswith('&gt;'):\n                    name = line.replace('&gt;','').split()[0]\n                    if name == qid:\n                        flag = 1\n                        resultfile.write(line + '\\n')\n                    else:\n                        flag = 0\n                else:\n                    if flag == 0:\n                        pass\n                    else:\n                        resultfile.write(line + '\\n')\n    resultfile.close()\n\n\nfire.Fire(main)\n</code></pre> <p>\u535a\u4e3b\u4e5f\u662f\u521a\u521a\u5b66\u4e60Python\uff0c\u5982\u6709\u9519\u8bef\uff0c\u6b22\u8fce\u6307\u6b63~</p>","tags":["documentation","sample"]},{"location":"01.Programing/02.Python/2019-03-07-extract-from-fastq/","title":"\u4ecefastq\u6587\u4ef6\u4e2d\u6279\u91cf\u63d0\u53d6/\u8fc7\u6ee4\u5e8f\u5217","text":"<p>\u535a\u4e3b\u4e5f\u662f\u521a\u521a\u63a5\u89e6\u751f\u4fe1\uff0c\u4f1a\u5c06\u81ea\u5df1\u5e73\u65f6\u7ec3\u4e60\u7528\u5230\u7684python\u811a\u672c\u53d1\u5e03\u5230\u535a\u5ba2\u4e0a\uff0c\u7528\u6765\u8bb0\u5f55\u81ea\u5df1\u7684\u5b66\u4e60\u4e4b\u8def\u3002</p>","tags":["documentation","sample"]},{"location":"01.Programing/02.Python/2019-03-07-extract-from-fastq/#_1","title":"\u4ecb\u7ecd","text":"<p>\u6d4b\u5e8f\u56de\u6765\u7684fastq\u6587\u4ef6\u901a\u5e38\u5728\u5206\u6790\u4e4b\u524d\uff0c\u9700\u8981\u8fdb\u884c\u8fc7\u6ee4\uff0c\u8be5\u811a\u672c\u5229\u7528python\u5b9e\u73b0fastq\u6587\u4ef6\u4e2d\u63d0\u53d6\u6307\u5b9aID\u7684\u5e8f\u5217\uff0c\u5e76\u4fdd\u5b58\u4e3a\u65b0fastq\u6587\u4ef6\uff0c\u811a\u672c\u4e00\u6240\u6709\u8f93\u5165\u6587\u4ef6\u548c\u8f93\u51fa\u6587\u4ef6\u90fd\u5fc5\u987b\u662f\u538b\u7f29\u6587\u4ef6\u683c\u5f0f\uff0c\u811a\u672c\u4e8c\u662f\u5426\u538b\u7f29\u5747\u53ef\uff0c\u4f46\u8f93\u51fa\u7684\u8fc7\u6ee4\u540e\u7684\u6587\u4ef6\u4f1a\u548c\u539f\u59cbfastq\u6587\u4ef6\u4fdd\u6301\u4e00\u81f4\u3002</p>","tags":["documentation","sample"]},{"location":"01.Programing/02.Python/2019-03-07-extract-from-fastq/#_2","title":"\u8bf4\u660e","text":"<p>\u811a\u672c\u4e00\uff1a - \u8f93\u5165\u6587\u4ef6\u4e3afq.gz\u6587\u4ef6\uff0c\u538b\u7f29\u7684ID list\u6587\u4ef6\u3002 - \u5fc5\u987b\u662f\u538b\u7f29\u683c\u5f0f\u7684\u6587\u4ef6\u624d\u53ef\u4ee5\uff0c\u5982\u679c\u975e\u538b\u7f29\u683c\u5f0f\uff0c\u53ef\u4ee5\u538b\u7f29\u6210gz\u683c\u5f0f\u540e\u4f7f\u7528\u8be5\u811a\u672c\uff0c\u6216\u8005\u5c06\u8be5\u811a\u672c\u6539\u5199\u3002</p> <p>\u811a\u672c\u4e8c\uff1a - \u81ea\u52a8\u8bc6\u522binput\u6587\u4ef6\u683c\u5f0f\uff0c\u65e0\u8bbafq\u6587\u4ef6\u662f\u5426\u538b\u7f29\u90fd\u53ef\u4ee5\u6253\u5f00\u3002 - \u8f93\u51fa\u6587\u4ef6\u683c\u5f0f\u9ed8\u8ba4\u4e0efq\u6587\u4ef6\u4e00\u81f4\uff0c\u5373fq\u662f\u538b\u7f29\u6587\u4ef6\uff0c\u8fc7\u6ee4\u540e\u7684\u8f93\u51fa\u6587\u4ef6\u4e5f\u662f\u538b\u7f29\u6587\u4ef6\uff0cfq\u6ca1\u6709\u538b\u7f29\uff0c\u8f93\u51fa\u6587\u4ef6\u4e5f\u662f\u666e\u901a\u683c\u5f0f\u3002</p>","tags":["documentation","sample"]},{"location":"01.Programing/02.Python/2019-03-07-extract-from-fastq/#_3","title":"\u811a\u672c\u5982\u4e0b","text":"<p>\u811a\u672c\u4e00</p> <p><pre><code>#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n#Author: gyw\n#Date: 2019-03-07\n#E-mail: willgyw@126.com\n#Description:Filter reads from fastq.gz \n\nimport gzip\nimport argparse\n\n\nparser = argparse.ArgumentParser(description='filter reads from fastq.gz')\nparser.add_argument('--fastq', '-q', dest='fastq', help='input a fastq.gz file')\nparser.add_argument('--idlist', '-i', dest='idlist', help='input idlist.gz file')\nparser.add_argument('--outfile', '-o', dest='outfile', help='input outfile name,end by gz')\nargs = parser.parse_args()\n\nfastqdict = {}\n\nwith gzip.open(args.fastq, 'rb') as fastq:\n    for line in fastq:\n        if line.decode().startswith('@'):\n            fastqid = line.decode().strip().split()[0][1:]\n            fastqdict[fastqid] = ''\n        else:\n            fastqdict[fastqid] += line.decode()\n\noutfile = gzip.open(args.outfile, 'wb')\n\nwith gzip.open(args.idlist, 'rb') as idfile:\n    for line in idfile:\n        readsid = line.decode().strip()\n        for key in fastqdict.keys():\n            if readsid == key:\n                res = '@' + key + '\\n' + fastqdict[key]\n                outfile.write(res.encode())\n\noutfile.close()\n</code></pre> \u811a\u672c\u4e8c <pre><code>import filetype\nimport gzip\nimport argparse\n\n\nparser = argparse.ArgumentParser(description='filter reads from fastq')\nparser.add_argument('--fastq', '-q', dest='fastq', help='input a fastq file')\nparser.add_argument('--idlist', '-i', dest='idlist', help='input idlist file')\nparser.add_argument('--outfile', '-o', dest='outfile', help='input outfile name')\nargs = parser.parse_args()\n\nfastqdict = {}\nkind1 = filetype.guess(args.fastq)\nkind2 = filetype.guess(args.idlist)\nif kind1 is None:\n    with open(args.fastq,'r') as fastq:\n        for line in fastq:\n            if line.startswith('@'):\n                fastqid = line.strip().split()[0][1:]\n                fastqdict[fastqid] = ''\n            else:\n                fastqdict[fastqid] += line\nelif kind1.extension == 'gz':\n    with gzip.open(args.fastq, 'rb') as fastq:\n        for line in fastq:\n            if line.decode().startswith('@'):\n                fastqid = line.decode().strip().split()[0][1:]\n                fastqdict[fastqid] = ''\n            else:\n                fastqdict[fastqid] += line.decode()\nif kind1 is None:\n    outfile = open(args.outfile, 'w')\nelif kind1.extension == 'gz':\n    outfile = gzip.open(args.outfile, 'wb')\nif kind2 is None:\n    with open(args.idlist, 'r') as idfile:\n        for line in idfile:\n            readsid = line.strip()\n            for key in fastqdict.keys():\n                if readsid == key:\n                    res = '@' + key + '\\n' + fastqdict[key]\n                    if kind1 is None:\n                        outfile.write(res)\n                    elif kind1.extension == 'gz':\n                        outfile.write(res.encode())\nelif kind2.extension == 'gz':\n    with gzip.open(args.idlist, 'rb') as idfile:\n        for line in idfile:\n            readsid = line.decode().strip()\n            for key in fastqdict.keys():\n                if readsid == key:\n                    res = '@' + key + '\\n' + fastqdict[key]\n                    if kind1 is None:\n                        outfile.write(res)\n                    elif kind1.extension == 'gz':\n                        outfile.write(res.encode())\n\noutfile.close()\n</code></pre></p> <p>\u5982\u6709\u9519\u8bef\uff0c\u6b22\u8fce\u5927\u5bb6\u6307\u6b63\u3002</p>","tags":["documentation","sample"]},{"location":"01.Programing/02.Python/2019-07-06-douban-movies/","title":"\u3010Python\u3011\u5229\u7528\u5b9a\u5411\u7f51\u7edc\u722c\u866b\u722c\u53d6\u8c46\u74e3\u7535\u5f71top250","text":"<p>\u6700\u8fd1\u5728\u5916\u5730\u5b9e\u4e60\uff0c\u95f2\u6765\u65e0\u4e8b\u5b66\u4e86\u4e00\u4e0brequests\u5e93\u548cBeautifulSoup\uff0c\u638c\u63e1\u57fa\u672c\u7528\u6cd5\u4e4b\u540e\u8bd5\u7740\u722c\u53d6\u4e86\u4e00\u4e0b\u8c46\u74e3\u7535\u5f71top250\uff0c\u4e2d\u95f4\u4e5f\u53c2\u8003\u4e86\u4e0d\u5c11\u5176\u4ed6\u5927\u4f6c\u7684\u535a\u5ba2\uff0c\u6240\u4ee5\u6700\u540e\u5199\u51fa\u6765\u7684\u4ee3\u7801\u4e5f\u90fd\u5927\u540c\u5c0f\u5f02\u5427\uff0c\u5c31\u5f53\u804a\u4ee5\u81ea\u6170\u4e86\u3002</p>"},{"location":"01.Programing/02.Python/2019-07-06-douban-movies/#_1","title":"\u7b80\u4ecb","text":"<p>\u5229\u7528requests\u5e93\u548cbs4\u4e2d\u7684BeautifulSoup\uff0c\u5b9e\u73b0\u5bf9\u8c46\u74e3\u7535\u5f71top250\u7684\u722c\u53d6\uff0c\u6700\u540e\u5c06\u7535\u5f71\u4fe1\u606f\u5199\u5165\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\u4e2d\u3002  ## \u4ee3\u7801\u5982\u4e0b</p> <pre><code>'''\n@Author     : Guo Yingwei\n@Date       : 2019-07-06 18:10:29\n@E-mail     : willgyw@126.com\n@Description: crawl douban Movies Top250 ,\n              and write the information to a file. \n'''\n\nimport requests\nfrom bs4 import BeautifulSoup\nimport codecs\n\n\ndef get_page(url):\n    try:\n        r = requests.get(url)\n        r.raise_for_status()\n        r.encoding = r.apparent_encoding\n        return r.text\n    except:\n        return ''\n\ndef parse_html(html, return_list):\n    soup = BeautifulSoup(html, 'html.parser')    \n    movie_list = soup.find('ol', attrs={'class': 'grid_view'}).find_all('li')\n    for movie in movie_list:\n        title = movie.find('span', attrs={'class': 'title'}).get_text()\n        rating_num = movie.find('span', attrs={'class': 'rating_num'}).get_text()\n        inq = movie.find('span', attrs={'class': 'inq'}).get_text()\n        return_list.append([title, rating_num, inq])\n    return return_list\n\ndef write_file(return_list):   \n    with codecs.open('doubanMoviesTop250.txt','wb+', encoding='utf-8') as f:\n        tplt = u'{0:&lt;4}\\t{1:{4}^16}\\t{2:{4}^10}\\t{3:&lt;20}'\n        f.write(tplt.format('\u6392\u540d', '\u540d\u79f0', '\u8bc4\u5206', '\u4e00\u53e5\u8bdd\u7b80\u4ecb', chr(12288)) + '\\n')\n        count = 0\n        for i in return_list:\n            count += 1\n            f.write(tplt.format(count, i[0], i[1],i[2], chr(12288)) + '\\n')\n\ndef main():\n    start_url='https://movie.douban.com/top250'\n    movie_list = []    \n    for i in range(10):\n        html = get_page(start_url + '?start=' + str(25*i))\n        parse_html(html, movie_list)\n    write_file(movie_list)    \n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"01.Programing/02.Python/2019-07-06-douban-movies/#_2","title":"\u7ed3\u679c\u5982\u4e0b","text":"<p>\u90e8\u5206\u7f51\u7ad9\u6e90\u7801\u5982\u4e0b\uff1a</p> <pre><code>&lt;ol class=\"grid_view\"&gt;\n        &lt;li&gt;\n            &lt;div class=\"item\"&gt;\n                &lt;div class=\"pic\"&gt;\n                    &lt;em class=\"\"&gt;1&lt;/em&gt;\n                    &lt;a href=\"https://movie.douban.com/subject/1292052/\"&gt;\n                        &lt;img width=\"100\" alt=\"\u8096\u7533\u514b\u7684\u6551\u8d4e\" src=\"https://img3.doubanio.com/view/photo/s_ratio_poster/public/p480747492.webp\" class=\"\"&gt;\n                    &lt;/a&gt;\n                &lt;/div&gt;\n                &lt;div class=\"info\"&gt;\n                    &lt;div class=\"hd\"&gt;\n                        &lt;a href=\"https://movie.douban.com/subject/1292052/\" class=\"\"&gt;\n                            &lt;span class=\"title\"&gt;\u8096\u7533\u514b\u7684\u6551\u8d4e&lt;/span&gt;\n                                    &lt;span class=\"title\"&gt;&amp;nbsp;/&amp;nbsp;The Shawshank Redemption&lt;/span&gt;\n                                &lt;span class=\"other\"&gt;&amp;nbsp;/&amp;nbsp;\u6708\u9ed1\u9ad8\u98de(\u6e2f)  /  \u523a\u6fc01995(\u53f0)&lt;/span&gt;\n                        &lt;/a&gt;\n\n\n                            &lt;span class=\"playable\"&gt;[\u53ef\u64ad\u653e]&lt;/span&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"bd\"&gt;\n                        &lt;p class=\"\"&gt;\n                            \u5bfc\u6f14: \u5f17\u5170\u514b\u00b7\u5fb7\u62c9\u90a6\u7279 Frank Darabont&amp;nbsp;&amp;nbsp;&amp;nbsp;\u4e3b\u6f14: \u8482\u59c6\u00b7\u7f57\u5bbe\u65af Tim Robbins /...&lt;br&gt;\n                            1994&amp;nbsp;/&amp;nbsp;\u7f8e\u56fd&amp;nbsp;/&amp;nbsp;\u72af\u7f6a \u5267\u60c5\n                        &lt;/p&gt;\n\n\n                        &lt;div class=\"star\"&gt;\n                                &lt;span class=\"rating5-t\"&gt;&lt;/span&gt;\n                                &lt;span class=\"rating_num\" property=\"v:average\"&gt;9.6&lt;/span&gt;\n                                &lt;span property=\"v:best\" content=\"10.0\"&gt;&lt;/span&gt;\n                                &lt;span&gt;1477697\u4eba\u8bc4\u4ef7&lt;/span&gt;\n                        &lt;/div&gt;\n\n                            &lt;p class=\"quote\"&gt;\n                                &lt;span class=\"inq\"&gt;\u5e0c\u671b\u8ba9\u4eba\u81ea\u7531\u3002&lt;/span&gt;\n                            &lt;/p&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/li&gt;\n        &lt;li&gt;\n            &lt;div class=\"item\"&gt;\n                &lt;div class=\"pic\"&gt;\n                    &lt;em class=\"\"&gt;2&lt;/em&gt;\n                    &lt;a href=\"https://movie.douban.com/subject/1291546/\"&gt;\n                        &lt;img width=\"100\" alt=\"\u9738\u738b\u522b\u59ec\" src=\"https://img3.doubanio.com/view/photo/s_ratio_poster/public/p1910813120.webp\" class=\"\"&gt;\n                    &lt;/a&gt;\n                &lt;/div&gt;\n                &lt;div class=\"info\"&gt;\n                    &lt;div class=\"hd\"&gt;\n                        &lt;a href=\"https://movie.douban.com/subject/1291546/\" class=\"\"&gt;\n                            &lt;span class=\"title\"&gt;\u9738\u738b\u522b\u59ec&lt;/span&gt;\n                                &lt;span class=\"other\"&gt;&amp;nbsp;/&amp;nbsp;\u518d\u89c1\uff0c\u6211\u7684\u59be  /  Farewell My Concubine&lt;/span&gt;\n                        &lt;/a&gt;\n\n\n                            &lt;span class=\"playable\"&gt;[\u53ef\u64ad\u653e]&lt;/span&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\"bd\"&gt;\n                        &lt;p class=\"\"&gt;\n                            \u5bfc\u6f14: \u9648\u51ef\u6b4c Kaige Chen&amp;nbsp;&amp;nbsp;&amp;nbsp;\u4e3b\u6f14: \u5f20\u56fd\u8363 Leslie Cheung / \u5f20\u4e30\u6bc5 Fengyi Zha...&lt;br&gt;\n                            1993&amp;nbsp;/&amp;nbsp;\u4e2d\u56fd\u5927\u9646 \u9999\u6e2f&amp;nbsp;/&amp;nbsp;\u5267\u60c5 \u7231\u60c5 \u540c\u6027\n                        &lt;/p&gt;\n\n\n                        &lt;div class=\"star\"&gt;\n                                &lt;span class=\"rating5-t\"&gt;&lt;/span&gt;\n                                &lt;span class=\"rating_num\" property=\"v:average\"&gt;9.6&lt;/span&gt;\n                                &lt;span property=\"v:best\" content=\"10.0\"&gt;&lt;/span&gt;\n                                &lt;span&gt;1094842\u4eba\u8bc4\u4ef7&lt;/span&gt;\n                        &lt;/div&gt;\n\n                            &lt;p class=\"quote\"&gt;\n                                &lt;span class=\"inq\"&gt;\u98ce\u534e\u7edd\u4ee3\u3002&lt;/span&gt;\n                            &lt;/p&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/li&gt;\n</code></pre> <p>\u535a\u4e3b\u4e5f\u662f\u521a\u521a\u63a5\u89e6Python\u7684\u65b0\u624b\uff0c\u5982\u6709\u9519\u8bef\uff0c\u6b22\u8fce\u6307\u6b63\u3002</p>"},{"location":"02.Bioinfomatics/01.Knowledge/Evolution/yanhua/","title":"\u751f\u4fe1\u77e5\u8bc6\u50a8\u5907","text":""},{"location":"02.Bioinfomatics/02.Technology/format/","title":"\u751f\u4fe1\u6280\u672f\u50a8\u5907","text":""},{"location":"04.About/about/","title":"About me","text":"<p>My name is Yingwei Guo.</p>"}]}